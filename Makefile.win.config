# spell-checker:ignore (names/vars) CFLAGS DEFINETYPE funcs WNNNN

NAME := less

SRC_PATH := .$()## path to source relative to makefile (defaults to first of ['src','source']); used to create ${SRC_DIR} which is then used as the source base directory path
DEPS = ./defines.h ./less.h ./funcs.h ./cmd.h $()## manually-configured common/shared dependencies; note: use delayed expansion (`=`, not `:=`) if referencing a later defined variable (eg, `{SRC_DIR}/defines.h`)
LIBS := $(if $(filter-out i586-pc-msdosdjgpp-gcc,${CC}),user32,) $()## list of any additional required libraries (space-separated)

INC_DIRS := ${BASEPATH}

# * disable warnings
# (bcc32) ## -w-NNNN :: disable warning WNNNN
# ~ W8004 == VARIABLE is assigned a value that is never used
# ~ W8008 == Condition is always true in function
# ~ W8057 == parameter is never used
# ~ W8064 == call to function with no prototype
# ~ W8065 == no prototype for function
# ~ W8066 == unreachable code in function
CFLAGS_bcc32 := -w-8004 -w-8008 -w-8057 -w-8064 -w-8065 -w-8066
CFLAGS_cl := $(if $(filter clang-cl,${CC}),-Wno-deprecated-non-prototype,)
CFLAGS_clang := -Wno-comment -Wno-deprecated-declarations -Wno-strict-prototypes -Wno-unused-parameter
CFLAGS_gcc := -Wno-comment -Wno-deprecated-declarations -Wno-unused-parameter
