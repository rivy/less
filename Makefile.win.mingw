# Makefile for less.
# Windows version; MinGW gcc compiler

# `make -f Makefile.win.mingw`

#### Start of system configuration section. ####

CC = gcc
## -g :: produce debugging information
## -O<n> :: <n> == [0 .. 3], increasing level of optimization (see <https://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html> @@ <https://archive.vn/7YtdI>)
## -pedantic-errors :: error on use of compiler language extensions
## -Werror :: warnings treated as errors
## -Wall :: enable all (usual) warnings
## -Wextra :: enable extra warnings
## -Wno-comment :: suppress warnings about trailing comments on directive lines
## -Wno-deprecated-declarations :: suppress deprecation warnings
CFLAGS = -I. -pedantic-errors -Werror -Wall -Wno-comment -Wno-deprecated-declarations
CFLAGS_COMPILE_ONLY = -c
CPPFLAGS =
LDFLAGS =

LIBS =

EXEEXT = .exe
O = o

CP = $(shell command -v cp >/dev/null 2>&1 && echo 'cp')

ifneq ($(CP),cp)
	CP = copy
endif

DEFINETYPE = wn
OBJDEP = defines.h less.h

DEBUG ?= 0
ifeq ($(DEBUG),1)
	CFLAGS += -DDEBUG -O0 -g
else
	CFLAGS += -DNDEBUG -O3
endif

#### End of system configuration section. ####

# This rule allows us to supply the necessary -D options
# in addition to whatever the user asks for.
.c.${O}:
	${CC} ${CFLAGS_COMPILE_ONLY} ${CPPFLAGS} ${CFLAGS} $<

OBJ = \
	main.${O} screen.${O} brac.${O} ch.${O} charset.${O} cmdbuf.${O} \
	command.${O} cvt.${O} decode.${O} edit.${O} filename.${O} forwback.${O} \
	help.${O} ifile.${O} input.${O} jump.${O} line.${O} linenum.${O} \
	lsystem.${O} mark.${O} optfunc.${O} option.${O} opttbl.${O} os.${O} \
	output.${O} pattern.${O} position.${O} prompt.${O} search.${O} signal.${O} \
	tags.${O} ttyin.${O} version.${O} regexp.${O}

all: less${EXEEXT} lesskey${EXEEXT}

less${EXEEXT}: ${OBJ}
	${CC} ${CPPFLAGS} ${CFLAGS} ${OBJ} -o $@ ${LDFLAGS} ${LIBS}

lesskey${EXEEXT}: lesskey.${O} version.${O}
	${CC} ${CPPFLAGS} ${CFLAGS} lesskey.${O} version.${O} -o $@ ${LDFLAGS} ${LIBS}

${OBJ}: ${OBJDEP}

defines.h: defines.${DEFINETYPE}
	${CP} defines.${DEFINETYPE} defines.h

clean:
	-if EXIST "*.${O}" del *.${O}
	-if EXIST "defines.h" del defines.h
	-if EXIST "less${EXEEXT}" del less${EXEEXT}
	-if EXIST "lesskey${EXEEXT}" del lesskey${EXEEXT}

build: all
compile: ${OBJ}
realclean: clean
rebuild: clean build
vclean: realclean
